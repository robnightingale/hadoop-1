#!/bin/bash

[[ "TRACE" ]] && set -x

: ${HADOOP_INSTALL:=/usr/local/hadoop}

startSsh() {
 echo -e "Starting SSHD service"
 /usr/sbin/sshd
}

startMaster() {
su - hduser -c "$HADOOP_INSTALL/sbin/start-all.sh"
su - hduser -c "$HADOOP_INSTALL/sbin/mr-jobhistory-daemon.sh start historyserver --config /usr/local/hadoop/etc/hadoop"
su - hduser -c "$HADOOP_INSTALL/bin/hdfs dfs -mkdir -p /user/hduser"
su - hduser -c "$HADOOP_INSTALL/bin/hdfs dfs -mkdir -p /user/hue"
su - hduser -c "$HADOOP_INSTALL/bin/hdfs dfs -chmod g+w /user/hduser"
su - hduser -c "$HADOOP_INSTALL/bin/hdfs dfs -chmod g+w /user/hue"
su - hduser -c "$HADOOP_INSTALL/sbin/httpfs.sh start"
}

startSlave() {
su - hduser -c "$HADOOP_INSTALL/sbin/hadoop-daemon.sh --config /usr/local/hadoop/etc/hadoop --script hdfs start datanode"
su - hduser -c "$HADOOP_INSTALL/sbin/yarn-daemons.sh --config /usr/local/hadoop/etc/hadoop  start nodemanager"
}

deamon() {
  while true; do sleep 1000; done
}

bashPrompt() {
 /bin/bash
}

sshPromt() {
 /usr/sbin/sshd -D
}

initialize() {
   if [[ $1 == 'master' ]] 
   then
    startMaster
   elif [[ $1 == 'slave' ]]
   then
    startSlave
   fi
}

main() {
 if [ ! -f /hadoop_initialized ]; then
    initialize $2
    touch /hadoop_initialized
  else
    initialize $2
  fi
  if [[ $1 == "-d" ]]; then
   deamon
  fi

}

[[ "$0" == "$BASH_SOURCE" ]] && main "$@"
